# on:
#   push:
#     # Sequence of patterns matched against refs/tags
#     tags:
#       - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

# name: Upload Release Asset

# jobs:
#   build:
#     name: Upload Release Asset
#     runs-on: ${{ matrix.os }}
#     strategy:
#       matrix:
#         os: [macos-10.14, windows-2019, ubuntu-18.04]

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2.3.1

#       - name: Install Node.js, NPM and Yarn
#         uses: actions/setup-node@v1.4.2
#         with:
#           node-version: 14

#       - name: yarn install --frozen-lockfile
#         run: |
#           yarn install --frozen-lockfile

#       - name: yarn package-ci
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         run: yarn package-ci

#       - name: Create Release
#         id: create_release
#         uses: actions/create-release@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           tag_name: ${{ github.ref }}
#           release_name: Release ${{ github.ref }}
#           draft: false
#           prerelease: false

#       - name: Upload Release Asset
#         id: upload-release-asset
#         uses: actions/upload-release-asset@v1.0.2
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           files: release/
#           upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
